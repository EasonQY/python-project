# encoding:utf-8
import urllib
import urllib2
from bs4 import BeautifulSoup
import requests
import os
import lxml
import sys
import re
reload(sys)
sys.setdefaultencoding( "utf-8" )


class mzitu():

    def all_url(self,url):
        html = self.request(url)##调用request函数把套图地址传进去会返回给我们一个response
        #all_a = BeautifulSoup(html.text, 'lxml').find('div',class_='all').find_all(href =re.compile("926"))
        all_a = BeautifulSoup(html.text,'lxml').find_all(href =re.compile("926"))
        for a in all_a[1:4]:
            title = a.get_text() #取出a标签的文本
            print(u'开始保存：', title)
            path = str(title).replace("?",'_')
            self.mkdir(path) #调用mkdir函数创建文件夹！这儿path代表的是标题title哦！
            href = a['href']
            self.html(href)#调用html函数把href参数传递过去！href是啥还记的吧？ 就是套图的地址哦！

    def html(self,href):#这个函数是处理套图地址获得图片的页面地址
        html = self.request(href) #取出a标签的href属性
        max_span = BeautifulSoup(html.text,'lxml').find('div',class_='pagenavi').find_all('span')[-2].get_text()
        for page in range(1,int(max_span)+1):
            page_url = href +'/' +str(page)
            self.img(page_url)

    def img(self,page_url):#这个函数处理图片页面地址获得图片的实际地址
        img_html = self.request(page_url)
        img_url = BeautifulSoup(img_html.text,'lxml').find('div',class_ ='main-image').find('img')['src']# 使用bea解析网页，lxml为解析器
        self.save(img_url)
    def save(self,img_url):
        name = img_url[-9:-4] #取url倒数第四至第9位做图片的名字
        img = self.request(img_url)
        f = open(name +'.jpg','ab') #写入多媒体文件必要要b这个参数
        f.write(img.content) #多媒体文件要用content
        f.close()

    def request(self,url):
        headers = {
            'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36'}
        content = requests.get(url, headers=headers)
        return content

    def mkdir(self, path):
        path = path.strip()
        isExists = os.path.exists(os.path.join('/Users/wangxia/Documents/project/internet_worm/mzitu/', path))
        if not isExists:
            print(u'建一个名字叫做', path, u'的文件夹')
            return True
        else:
            print(u'名字叫做', path, u'的文件夹已经存在了')
            return False

Mzitu = mzitu()
Mzitu.all_url('http://www.mzitu.com/all')##给函数all_url传入参数  你可以当作启动爬虫（就是入口）







